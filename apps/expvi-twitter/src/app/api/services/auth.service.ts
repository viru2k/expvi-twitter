/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { 08136088C4862C313B35D6518Bab8D3A } from '../fn/auth/08136088-c-4862-c-313-b-35-d-6518-bab-8-d-3-a';
import { 08136088C4862C313B35D6518Bab8D3A$Params } from '../fn/auth/08136088-c-4862-c-313-b-35-d-6518-bab-8-d-3-a';
import { 99D66635C4992Aeaa6Aa44Ff653D0563 } from '../fn/auth/99-d-66635-c-4992-aeaa-6-aa-44-ff-653-d-0563';
import { 99D66635C4992Aeaa6Aa44Ff653D0563$Params } from '../fn/auth/99-d-66635-c-4992-aeaa-6-aa-44-ff-653-d-0563';
import { TokenResponse } from '../models/token-response';

@Injectable({ providedIn: 'root' })
export class AuthService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `08136088C4862C313B35D6518Bab8D3A()` */
  static readonly 08136088C4862C313B35D6518Bab8D3APath = '/auth/register';

  /**
   * Register a new user
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `08136088C4862C313B35D6518Bab8D3A()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  08136088C4862C313B35D6518Bab8D3A$Response(params?: 08136088C4862C313B35D6518Bab8D3A$Params, context?: HttpContext): Observable<StrictHttpResponse<TokenResponse>> {
    return 08136088C4862C313B35D6518Bab8D3A(this.http, this.rootUrl, params, context);
  }

  /**
   * Register a new user
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `08136088C4862C313B35D6518Bab8D3A$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  08136088C4862C313B35D6518Bab8D3A(params?: 08136088C4862C313B35D6518Bab8D3A$Params, context?: HttpContext): Observable<TokenResponse> {
    return this.08136088C4862C313B35D6518Bab8D3A$Response(params, context).pipe(
      map((r: StrictHttpResponse<TokenResponse>): TokenResponse => r.body)
    );
  }

  /** Path part for operation `99D66635C4992Aeaa6Aa44Ff653D0563()` */
  static readonly 99D66635C4992Aeaa6Aa44Ff653D0563Path = '/auth/login';

  /**
   * Log in as a user
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `99D66635C4992Aeaa6Aa44Ff653D0563()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  99D66635C4992Aeaa6Aa44Ff653D0563$Response(params?: 99D66635C4992Aeaa6Aa44Ff653D0563$Params, context?: HttpContext): Observable<StrictHttpResponse<TokenResponse>> {
    return 99D66635C4992Aeaa6Aa44Ff653D0563(this.http, this.rootUrl, params, context);
  }

  /**
   * Log in as a user
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `99D66635C4992Aeaa6Aa44Ff653D0563$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  99D66635C4992Aeaa6Aa44Ff653D0563(params?: 99D66635C4992Aeaa6Aa44Ff653D0563$Params, context?: HttpContext): Observable<TokenResponse> {
    return this.99D66635C4992Aeaa6Aa44Ff653D0563$Response(params, context).pipe(
      map((r: StrictHttpResponse<TokenResponse>): TokenResponse => r.body)
    );
  }

}
