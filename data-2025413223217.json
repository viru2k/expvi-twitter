{
  "openapi": "3.0.0",
  "info": {
    "title": "Expivi Twitter API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "The Expivi Twitter API"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "description": "Register a new user",
        "operationId": "registerUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/RegistrationRequest"
        },
        "responses": {
          "201": {
            "description": "The user was registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "The post body was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "Log in as a user",
        "operationId": "loginUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/LoginRequest"
        },
        "responses": {
          "201": {
            "description": "The user was logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request was unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "422": {
            "description": "The post body was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}/user": {
      "get": {
        "tags": ["Comments"],
        "description": "Get the user of a comment",
        "operationId": "getCommentUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The user who made the comment",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "The request was unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiAuth": []
          }
        ]
      }
    },
    "/comments/{id}": {
      "delete": {
        "tags": ["Comments"],
        "description": "Delete a comment",
        "operationId": "deleteCommentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The comment was deleted"
          },
          "401": {
            "description": "The request was unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "This action is forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TokenResponse": {
        "description": "The API token for the user",
        "properties": {
          "data": {
            "properties": {
              "token": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UnauthorizedResponse": {
        "description": "The user was unauthenticated",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthenticated"
          }
        },
        "type": "object"
      },
      "ValidationErrorResponse": {
        "description": "The post data was in invalid format",
        "properties": {
          "message": {
            "type": "string",
            "example": "The text field is required"
          },
          "errors": {
            "properties": {
              "string": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ForbiddenResponse": {
        "description": "This action is unauthorized",
        "properties": {
          "message": {
            "type": "string"
          },
          "exception": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotFoundResponse": {
        "description": "The resource was not found",
        "properties": {
          "message": {
            "type": "string"
          },
          "exception": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "requestBodies": {
      "LoginRequest": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "RegistrationRequest": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["name", "email", "password"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
